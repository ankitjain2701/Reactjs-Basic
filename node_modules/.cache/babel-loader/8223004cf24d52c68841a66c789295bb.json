{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\ws_git_clone\\\\dummy-react-web\\\\src\\\\components\\\\BlogPost\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport \"./style.css\";\nimport Card from '../UI/Card';\nimport blogpostdata from '../../data/blog.json';\n/**\r\n* @author\r\n* @function BlogPost\r\n\r\n**/\n\nconst BlogPost = props => {\n  const _useState = useState({\n    id: \"\",\n    blogCategory: \"\",\n    blogTitle: \"\",\n    slug: \"\",\n    postedOn: \"\",\n    author: \"\",\n    blogImage: \"\",\n    blogText: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        post = _useState2[0],\n        setPost = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        postid = _useState4[0],\n        setPostId = _useState4[1]; //console.log(props);\n\n\n  useEffect(() => {\n    const postId = props.match.params.postId;\n    const post = blogpostdata.data.find(post => post.id == postId);\n    setPost(post);\n    setPostId(postId);\n  }, [post, props.match.params.postId]);\n  if (post.blogImage = \"\") return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blogPostContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blogHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"blogCategory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, post.blogCategory), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"postTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, post.blogTitle), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"postedBy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"posted on \", post.postedOn, \" by \", post.author)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PostimageContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../blogPostImages/post.blogImage'),\n    alt: \"Post Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, post.blogTitle), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"l\", post.blogText, \" \"), \"S\")));\n};\n\nexport default BlogPost;","map":{"version":3,"sources":["F:/ws_git_clone/dummy-react-web/src/components/BlogPost/index.js"],"names":["React","useState","useEffect","Card","blogpostdata","BlogPost","props","id","blogCategory","blogTitle","slug","postedOn","author","blogImage","blogText","post","setPost","postid","setPostId","postId","match","params","data","find","require"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAGA;;;;;;AAMA,MAAMC,QAAQ,GAAGC,KAAD,IAAW;AAAA,oBAEFL,QAAQ,CAAC;AACtBM,IAAAA,EAAE,EAAC,EADmB;AAEtBC,IAAAA,YAAY,EAAC,EAFS;AAGtBC,IAAAA,SAAS,EAAC,EAHY;AAItBC,IAAAA,IAAI,EAAC,EAJiB;AAKtBC,IAAAA,QAAQ,EAAC,EALa;AAMtBC,IAAAA,MAAM,EAAE,EANc;AAOtBC,IAAAA,SAAS,EAAC,EAPY;AAQtBC,IAAAA,QAAQ,EAAC;AARa,GAAD,CAFN;AAAA;AAAA,QAEjBC,IAFiB;AAAA,QAEZC,OAFY;;AAAA,qBAYCf,QAAQ,CAAC,EAAD,CAZT;AAAA;AAAA,QAYjBgB,MAZiB;AAAA,QAYVC,SAZU,kBAavB;;;AACAhB,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMiB,MAAM,GAACb,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBF,MAAhC;AACA,UAAMJ,IAAI,GAACX,YAAY,CAACkB,IAAb,CAAkBC,IAAlB,CAAuBR,IAAI,IAAGA,IAAI,CAACR,EAAL,IAASY,MAAvC,CAAX;AACAH,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,SAAS,CAACC,MAAD,CAAT;AACH,GALQ,EAKP,CAACJ,IAAD,EAAMT,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBF,MAAzB,CALO,CAAT;AAOA,MAAGJ,IAAI,CAACF,SAAL,GAAe,EAAlB,EACI,OAAO,IAAP;AAIN,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCE,IAAI,CAACP,YAArC,CADA,eAEA;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BO,IAAI,CAACN,SAAhC,CAFA,eAGA;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAsCM,IAAI,CAACJ,QAA3C,UAAyDI,IAAI,CAACH,MAA9D,CAHA,CADJ,eAME;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,GAAG,EAAEY,OAAO,CAAC,qCAAD,CAAjB;AAA0D,IAAA,GAAG,EAAC,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CANF,eAYE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,IAAI,CAACN,SAAV,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKM,IAAI,CAACD,QAAV,MAFA,MAZF,CADJ,CADF;AAsBA,CAhDF;;AAkDA,eAAeT,QAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport \"./style.css\";\r\nimport Card from '../UI/Card';\r\nimport blogpostdata from '../../data/blog.json';\r\n\r\n\r\n/**\r\n* @author\r\n* @function BlogPost\r\n\r\n**/\r\n\r\nconst BlogPost= (props) => {\r\n  \r\n    const[post,setPost]= useState({\r\n            id:\"\" ,\r\n            blogCategory:\"\" ,\r\n            blogTitle:\"\",\r\n            slug:\"\",\r\n            postedOn:\"\",\r\n            author: \"\",\r\n            blogImage:\"\",\r\n            blogText:\"\"\r\n    });\r\n    const[postid,setPostId]=useState('');\r\n    //console.log(props);\r\n    useEffect(()=>{\r\n        const postId=props.match.params.postId;\r\n        const post=blogpostdata.data.find(post =>post.id==postId);\r\n        setPost(post);\r\n        setPostId(postId);\r\n    },[post,props.match.params.postId]); \r\n    \r\n    if(post.blogImage=\"\")\r\n        return null;\r\n    \r\n   \r\n    \r\n  return(\r\n    <div className=\"blogPostContainer\">\r\n        <Card>\r\n            <div className=\"blogHeader\">\r\n            <span className=\"blogCategory\">{post.blogCategory}</span>\r\n            <h1 className=\"postTitle\">{post.blogTitle}</h1>\r\n            <span className=\"postedBy\">posted on {post.postedOn} by {post.author}</span>\r\n            </div>\r\n          <div className=\"PostimageContainer\">\r\n          <img src={require('../../blogPostImages/post.blogImage')} alt=\"Post Image\"/>\r\n          {/*<img src={require('../../blogPostImages/'+ post.blogImage)} alt=\"Post Image\"/>\r\n  */}\r\n            \r\n          </div>  \r\n          <div className=\"postContent\">\r\n          <h3>{post.blogTitle}</h3>\r\n          <p>l{post.blogText} </p>S\r\n          </div>\r\n        </Card>\r\n    </div>   \r\n   )\r\n\r\n }\r\n\r\nexport default BlogPost;\r\n"]},"metadata":{},"sourceType":"module"}